function compileApp(fullFileName, appType)
%COMPILEAPP function will be used to open deploy tool GUI according to the
%appType passed in.
%
%Depend on the appType, this function will open Application Compiler for
%Desktop App or Web App. It will create a .prj file and then open the GUI
%for the compiler tool.

    if(strcmp(appType, 'DESKTOP_APP'))
        service = appdesigner.internal.application.getDesktopAppCompileService();
    end

    if(strcmp(appType, 'WEB_APP'))
        service = appdesigner.internal.application.getWebAppCompileService();
    end

    [filePath, fileName] = fileparts(fullFileName);


    mostRecentPrjFullFileName = appdesigner.internal.application.getMostRecentPackageProject(fullFileName, service);

    if ~isempty(mostRecentPrjFullFileName)
        try
            service.openProjectInGUIandRunAnalysis(mostRecentPrjFullFileName);
        catch ex
            % Note: if .prj is in a read-only directory, user will
            % not get an error message until an edit is made to any
            % field in the Package App dialog. The error message
            % will be generated by the Package App dialog.
            handleCommonCompilerErrors(ex, mostRecentPrjFullFileName);
        end
    else
        fileReader = appdesigner.internal.serialization.FileReader(fullFileName);
        appMetaData = fileReader.readAppMetadata();
        imgFullFilePath = fileReader.readAppScreenshot('file');

        projectName = appdesigner.internal.application.getFilteredAppName(appMetaData.Name);

        % Set the .prj filename to be the same as the app's filename if the
        % filtered app name is empty
        if isempty(projectName)
            projectName = fileName;
        end
        
        propectFullFile = fullfile(filePath, [projectName, '.prj']);
        originalProjectName = projectName;
        uniqueCounter = 0;
        foundUniqueProjectName = false;
        while ~foundUniqueProjectName
            try
                % .createAppsProject throws exception if filename conflict encountered
                prj = service.createNewProject(filePath, [projectName, '.prj']);
                service.save(prj);
                foundUniqueProjectName = true;
            catch ex
                if (strcmp(ex.identifier,'MATLAB:Java:GenericException') && ...
                        isa(ex.ExceptionObject, 'com.mathworks.deployment.services.NameCollisionException'))
                    % Name conflict with another .prj file. Append '_<int>' to name.
                    % Loop until a unique filename is found (e.g. App1_3.prj').
                    uniqueCounter = uniqueCounter + 1;
                    projectName = [originalProjectName '_' num2str(uniqueCounter)];
                else
                    handleCommonCompilerErrors(ex, propectFullFile);
                end
            end
        end

        % Add a main file
        service.addMainFile(prj, fullFileName);

        % pre-populate fields from app meta data
        if strcmp(appType, 'DESKTOP_APP')
            service.setApplicationName(prj, projectName);
            service.setSummary(prj, appMetaData.Summary);
            service.setDescription(prj, appMetaData.Description);
        else
            service.setAppName(prj, projectName);
            service.setSummary(prj, appMetaData.Summary);
            if ~isempty(imgFullFilePath)
                service.setImage(prj, imgFullFilePath);
            end
        end

        projectLocation = service.getProjectFileLocation(prj);
        service.save(prj);
        service.closeProject(prj);
        service.openProjectInGUIandRunAnalysis(projectLocation);
    end

    function handleCommonCompilerErrors(ex, prjFile)
        if (strcmp(ex.identifier,'MATLAB:Java:GenericException') && ...
                isa(ex.ExceptionObject, 'java.io.FileNotFoundException'))
            error(message('MATLAB:appdesigner:appdesigner:CompileAppCompileFileNotFound', prjFile));
        elseif (strcmp(ex.identifier,'MATLAB:Java:GenericException') && ...
                isa(ex.ExceptionObject, 'com.mathworks.deployment.services.ReadOnlyException'))
            error(message('MATLAB:appdesigner:appdesigner:CompileAppFolderNotWritable', prjFile));
        else
            error(message('MATLAB:appdesigner:appdesigner:CompileAppFailed', prjFile));
        end
    end
end
