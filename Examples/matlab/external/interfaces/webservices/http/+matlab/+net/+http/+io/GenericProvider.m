classdef GenericProvider < matlab.net.http.io.ContentProvider
% GenericProvider Generic ContentProvider for HTTP payloads
%
%   This provider is useful when you want to stream custom data generated by a function
%   (a GETDATAFCN) without having to create a ContentProvider subclass. Your
%   function can provide data in arbitrary sized buffers, and this class will take
%   care of any buffering necessary to stream it to the server. 
%
%   Typically you would first create a RequestMessage and specify desired header
%   fields, such as Content-Type, and then insert this provider into the message
%   Body prior to sending it.
%
%   Here is an example of a function that sends lines of input that the user
%   enters at the prompt, until an empty line:
%
%       function [data,stop] = gdf(~)
%           data = input('Data? ','s');
%           stop = isempty(data);
%           if ~stop
%               data = uint8([data newline]);
%           end
%       end
% 
%   The following will send all the input to the server
%
%      r = RequestMessage('put', ContentTypeField('text/plain'));
%      r.Body = GenericProvider(@gdf);
%      resp = r.send(url);
%
%   GenericProvider methods:
%     GenericProvider - constructor
%
%   GenericProvider properties:
%     GetDataFcn      - the function to get data
%
%   For Subclass authors
%   --------------------
%
%   Since the purpose of GenericProvider is to allow you to avoid writing a
%   subclass, it is not likely you would create a subclass of this provider.
%   However you can do so, perhaps extending functionality by examining the data
%   that the GETDATAFCN returns.
%
%   GenericProvider methods (overridden methods of ContentProvider called by MATLAB):
%     getData               - return the next buffer of data
%     expectedContentLength - expected length of content
%     preferredBufferSize   - preferred buffer size
%     restartable           - true if restartable
%     reusable              - true if reusable
%
% See also matlab.net.http.RequestMessage, matlab.net.http.MessageBody

% Copyright 2017 The MathWorks, Inc.
    
    properties (Access=private)
        ContentLength double
        BufferSize double
        RealGetDataFcn function_handle
        Restartable logical = false
        First logical = true
    end
    
    properties (Dependent)
        % GetDataFcn - the function to get data
        %   This is the function specified to the constructor.  You may also set this
        %   directly.
        GetDataFcn function_handle
    end
    
    methods
        function set.GetDataFcn(obj, fcn)
            n = nargout(fcn);
            if n >= 0 && n < 2
                error(message('MATLAB:http:NotEnoughReturnValues', 'GETDATAFCN', 2, 1));
            end
            n = nargin(fcn);
            if n == 0
                error(message('MATLAB:http:BadGetDataMethod', 1));
            else
                obj.Restartable = n ~= 1;
            end
            obj.RealGetDataFcn = fcn;
        end
        
        function value = get.GetDataFcn(obj)
            value = obj.RealGetDataFcn;
        end
        
        function obj = GenericProvider(getDataFcn, contentLength, bufferSize)
        % GenericProvider Generic ContentProvider constructor
        %  PROVIDER = GenericProvider(GETDATAFCN) constructs a ContentProvider that uses
        %    GETDATAFCN to obtain buffers of data. The function should be defined with
        %    one or two input arguments, depending on whether it is restartable and
        %    reusable:
        % 
        %    [DATA, STOP] = GETDATAFCN(LENGTH) returns the next buffer of data.
        %        LENGTH     MATLAB's suggested length of data to return for optimum
        %                   performance
        %        DATA       a buffer of data as a uint8 vector
        %        STOP       true if there are no more buffers after DATA
        %
        %        A GenericProvider with a GETDATAFCN defined this way is not restartable
        %        or reusable.  If MATLAB needs to resend the message because of
        %        redirection or authentication, or you attempt to reuse this provider
        %        after either a normal completion or an error, MATLAB will throw an
        %        exception.  Use this form of provider if your function is not
        %        restartable or you are sure that a resend will not be needed.  To send
        %        another message with a GETDATAFCN, create a new GenericProvider.
        %
        %    [DATA, STOP] = GETDATAFCN(LENGTH, FIRST) returns the next buffer of data.
        %        FIRST      a logical which is true if this is the first request for a
        %                   buffer of data for a message; false otherwise.
        %
        %        A GenericProvider with a GETDATAFCN defined this way is both
        %        restartable and reusable.  
        %
        %    If the RequestMessage containing this provider does not already have a
        %    Content-Length field, MATLAB sends the message using chunked transfer
        %    coding. Otherwise the total number of bytes returned in DATA since the
        %    start of the message must equal the Content-Length when STOP=true.
        %
        %  ___ = GenericProvider(___, CONTENTLENGTH) constructs a ContentProvider that
        %    adds a Content-Length field to the header of the message whose value is
        %    CONTENTLENGTH. You may use this form of constructor as an alternative to
        %    adding a Content-Length field to the header directly. In this case the
        %    length of the data returned by GETDATAFCN (before STOP=true is set) must
        %    exactly equal this length.
        % 
        %  ___ = GenericProvider(GETDATAFCN, CONTENTLENGTH, BUFFERSIZE) constructs a
        %    ContentProvider with additional options.
        %       CONTENTLENGTH    if not empty, the length of the data
        %       BUFFERSIZE       if not empty, the maximum size of the data buffer 
        %                        (the value to be passed into the LENGTH argument of
        %                        GETDATAFCN)
        %
        % See also ContentProvider, expectedContentLength, getBufferSize, restartable
            if nargin > 0
                obj.GetDataFcn = getDataFcn;
                if nargin > 1
                    obj.ContentLength = contentLength;
                    if nargin > 2
                        obj.BufferSize = bufferSize;
                    end
                end
            end
        end
        
        function [data, stop] = getData(obj, length)
        % getData Return next buffer of data
        %   [DATA, STOP] = getData(PROVIDER, LENGTH) is an overridden method of
        %   ContentProvider. This method simply calls the GETDATAFCN provided to the
        %   constructor.
        %
        % See also matlab.net.http.io.ContentProvider.getData
            if obj.Restartable
                [data, stop] = obj.GetDataFcn(length, obj.First);
                obj.First = false;
            else
                [data, stop] = obj.GetDataFcn(length);
            end
        end
    end
    
    methods (Access=protected)
        function length = expectedContentLength(obj, varargin)
        % expectedContentLength Return expected content length
        %   LENGTH = expectedContentLength(PROVIDER, FORCE) is an overridden method of
        %   ContentProvider. This method returns the value of CONTENTLENGTH
        %   provided to the constructor. If none was provided, returns [], which results
        %   in chunked transfer coding if the message has no Content-Length field.
        %
        % See also matlab.net.http.io.GenericProvider.GenericProvider,
        % matlab.net.http.io.ContentProvider.expectedContentLength
            length = obj.ContentLength;
        end
        
        function size = preferredBufferSize(obj)
        % preferredBufferSize Return the preferred buffer size
        %   SIZE = preferredBufferSize(PROVIDER) is an overridden method of
        %   ContentProvider. This method returns the value of BUFFERSIZE provided to
        %   the constructor. If none was provided, returns [], which uses a default
        %   buffer size.
        %
        % See also matlab.net.http.io.GenericProvider.GenericProvider,
        % matlab.net.http.io.ContentProvider.preferredBufferSize
            size = obj.BufferSize;
        end
        
        function tf = reusable(obj)
        % reusable Return true if provider is reusable
        %   TF = RESUSABLE(PROVIDER) is an overridden method of ContentProvider. It
        %   returns true if the GetDataFcn in this provider takes more than one
        %   input argument, or false otherwise.
        %
        % See also ContentProvider, matlab.net.http.io.GenericProvider.GenericProvider,
        % GetDataFcn, matlab.net.http.io.ContentProvider.reusable
            tf = obj.Restartable;
        end
        
        function tf = restartable(obj)
        % restartable Return true if provider is restartable
        %   TF = RESTARTABLE(PROVIDER) is an overridden method of ContentProvider. It
        %   returns true if the GetDataFcn specified to the constructor takes more than
        %   one input argument, or false otherwise.
        %
        % See also ContentProvider, matlab.net.http.io.GenericProvider.GenericProvider,
        % GetDataFcn, matlab.net.http.io.ContentProvider.restartable
            tf = obj.Restartable;
        end
        
        function start(obj)
            obj.First = true;
            obj.start@matlab.net.http.io.ContentProvider();
        end
    end        
    
end

