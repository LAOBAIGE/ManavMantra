function h = createactions(h)
%CREATEACTIONS   Create actions used by menus, toolbars, & context menus

%   Copyright 2006-2017 The MathWorks, Inc.

h.actions = java.util.HashMap;
h.actionstate = java.util.HashMap;

am = DAStudio.ActionManager;
am.initializeClient(h);

%FILE----------------------------------------------------------------------

% Export action
action = am.createAction(h,...
    'Text',fxptui.message('actionExportDataSet'),...
    'Tag','FPT_Export_DataSet',...
    'Callback','fxptui.cb_exportDataSet');
h.actions.put('EXPORT_DATASET', action);

% Import action
action = am.createAction(h,...
    'Text',fxptui.message('actionImportDataSet'),...
    'Tag','FPT_Import_Dataset',...
    'Callback','fxptui.cb_importDataSet');
h.actions.put('IMPORT_DATASET', action);

action = am.createDefaultAction(h, 'FILE_CLOSE');
action.statusTip = fxptui.message('tooltipCloseFPT');
action.Tag = 'FPT_file_close';
h.actions.put('FILE_CLOSE', action);


%VIEW----------------------------------------------------------------------
% Dialog View action
action = am.createDefaultAction(h, 'VIEW_SHOWDYNDLGS');
action.statusTip = fxptui.message('tooltipDynamicDilogDisplay');
action.Tag = 'FPT_view_showdialog';
h.actions.put('VIEW_SHOWDYNDLGS', action);

action = am.createDefaultAction(h, 'VIEW_INCREASEFONT');
action.statusTip = fxptui.message('tooltipIncreaseFont');
action.Tag = 'FPT_view_increasefont';
h.actions.put('VIEW_INCREASEFONT', action);

action = am.createDefaultAction(h, 'VIEW_DECREASEFONT');
action.statusTip = fxptui.message('tooltipDecreaseFont');
action.Tag = 'FPT_view_decreasefont';
h.actions.put('VIEW_DECREASEFONT', action);

action = am.createAction(h,...
    'Text',fxptui.message('labelShowSettingsPnl'),...
    'Tag','FPT_view_showsyssettings',...
    'Callback','fxptui.cb_togglepanelvis(''systemsettings'')');
action.toggleAction = 'On';
action.on = 'On';
h.actions.put('VIEW_SYSSETTINGSPNL', action);

action = am.createAction(h,...
    'Text',fxptui.message('labelShowShortcutPnl'),...
    'Tag','FPT_view_showshortcuts',...
    'Callback','fxptui.cb_togglepanelvis(''shortcuts'')');
action.toggleAction = 'On';
action.On = 'On';
h.actions.put('VIEW_SHORTCUTPNL', action);

action = am.createAction(h,...
    'Text',fxptui.message('labelShowFPAPnl'),...
    'Tag','FPT_view_fpa',...
    'Callback','fxptui.cb_togglepanelvis(''fpa'')');
action.toggleAction = 'On';
action.On = 'On';
h.actions.put('VIEW_FPAPNL', action);

action = am.createAction(h, ...
    'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'fpca.png'), ...
     'Text', fxptui.message('actionLAUNCHFPA'), ...
    'Tag', 'FPT_launchfpa',...
    'Callback', 'fxptui.cb_launchfpa;');
h.actions.put('LAUNCHFPA', action);

action = am.createDefaultAction(h, 'TOOLS_PROMPT_DLG_REPLACE');
action.on = 'on';
action.Tag = 'FPT_tools_dlgreplace';
h.actions.put('TOOLS_PROMPT_DLG_REPLACE', action);

% SIMULATION ACTIONS
action = am.createAction(h, ...
    'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'start.png'), ...
    'Tag', 'FPT_simulation_start',...
    'Callback', 'fxptui.cb_simulation(''start'');',...
    'Accel','Ctrl+T');
set(action,'Text', fxptui.message('actionSTARTSIM'));
h.actions.put('START', action);
	
action = am.createAction(h, ...
    'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'pause.png'), ...
    'Tag', 'FPT_simulation_pause',...
    'Callback', 'fxptui.cb_simulation(''pause'');');
set(action,'Text',fxptui.message('actionPAUSESIM'));
h.actions.put('PAUSE', action);

action = am.createAction(h, ...
    'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'stop.png'), ...
    'Tag', 'FPT_simulation_stop',...
    'Callback', 'fxptui.cb_simulation(''stop'');');
set(action,'Text',fxptui.message('actionSTOPSIM'));
h.actions.put('STOP', action);

% RANGE ANALYSIS
action = am.createAction(h,...
                         'icon',fullfile(matlabroot,'toolbox','fixedpoint','fixedpointtool','resources','derived.png'),...
                         'Text',fxptui.message('actionDERIVE'),...
                         'Tag', 'FPT_derive_range',...
                         'Callback','fxptui.cb_rangeanalysis;');
h.actions.put('DERIVE',action);

% DATA TYPE PROPOSALS
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'scaleproposeDT.png'), ...
                         'Text', fxptui.message('actionSCALEPROPOSEDT'), ...
                         'Tag', 'FPT_autoscale_proposeDT',...
                         'Callback', 'fxptui.cb_selectRunForPropose;');
h.actions.put('SCALE_PROPOSEDT', action);

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'scaleapplyDT.png'), ...
                         'Text', fxptui.message('actionSCALEAPPLYDT'), ...
                         'Tag', 'FPT_autoscale_applyDT',...
                         'Callback', 'fxptui.cb_selectRunForApply;');
h.actions.put('SCALE_APPLYDT', action);

%Results-------------------------------------------------------------------
str = fxptui.message('actionVIEWTSINFIGURESDI');
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'plot.png'), ...
                         'Text', str, ...
                         'Tag', 'FPT_view_tsinfigure',...
                         'Callback', 'fxptui.cb_plotinfigure;');
h.actions.put('VIEW_TSINFIGURE', action);

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'plothist.png'), ...
                         'Text', fxptui.message('actionVIEWHISTINFIGURE'), ...
                         'Tag', 'FPT_view_histinfigure',...
                         'Callback', 'fxptui.cb_plothistinfigure;');
h.actions.put('VIEW_HISTINFIGURE', action); 

str = fxptui.message('actionVIEWDIFFINFIGURESDI');
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'plotdiff.png'), ...
                         'Text', str, ...
                         'Tag', 'FPT_view_diffinfigure',...
                         'Callback', 'fxptui.cb_plotdiffinfigure;');
h.actions.put('VIEW_DIFFINFIGURE', action);

str = fxptui.message('actionVIEWRUNCOMPARESDI');
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'plotcompare.png'), ...
                         'Text', str, ...
                         'Tag', 'FPT_compare_runs',...
                         'Callback', 'fxptui.cb_compareruns;');
h.actions.put('VIEW_RUNCOMPARE', action);


action = am.createAction(h, ...
                         'Text', fxptui.message('labelHiliteRows'), ...
                         'Tag', 'FPT_result_issue_highlight',...
                         'Callback', 'fxptui.cb_togglehighlightoption;');
action.toggleAction = 'On';
action.On = 'On';
h.actions.put('VIEW_RESULT_ISSUE_HIGHLIGHT', action);

%SIMULINK------------------------------------------------------------------
action = am.createAction(h, ...
                         'Text', fxptui.message('actionHILITESYSTEM'), ...
                         'Tag', 'FPT_simulink_hilitesys',...
                         'Callback', 'fxptui.cb_highlightsystem');
h.actions.put('HILITE_SYSTEM', action);

action = am.createAction(h, ...
                         'Text', fxptui.message('actionHILITESYSTEM'), ...
                         'Tag', 'FPT_simulink_hiliteblock',...
                         'Callback', 'fxptui.cb_highlightblock');
h.actions.put('HILITE_BLOCK', action);

action = am.createAction(h, ...
                         'Text', fxptui.message('actionHILITEDTGROUP'), ...
                         'Tag', 'FPT_simulink_hilitedtgroup',...
                         'Callback', 'fxptui.cb_highlightdtgroup');
h.actions.put('HILITE_DTGROUP', action);

action = am.createAction(h, ...
                         'Text', fxptui.message('actionHILITECLEAR'), ...
                         'Tag', 'FPT_simulink_hiliteclear',...
                         'Callback', 'fxptui.cb_highlightclear');
h.actions.put('HILITE_CLEAR', action);

action = am.createAction(h, ...
                         'Text', fxptui.message('actionOPENSYSTEM'), ...
                         'Tag', 'FPT_simulink_opensys',...
                         'Callback', 'fxptui.cb_opensystem');
h.actions.put('OPEN_SYSTEM', action);
% HELP ----------------------------------------------------
action = am.createAction(h, ...
                         'Text', fxptui.message('actionHELPFXPTTOOL'), ...
                         'Tag', 'FPT_help_fptool',...
                         'Callback', 'fpbhelp(''fxptdlg'');');
h.actions.put('HELP_FXPTTOOL', action);

% Create the Fixed-Point Designer specific actions/menus if present.
if builtin('license','test','Fixed_Point_Toolbox') && ~isempty(ver('fixedpoint'))
    
    action = am.createAction(h, ...
                             'Text', fxptui.message('actionHELPSLFXPT'), ...
                             'Tag', 'FPT_help_slfxpt',...
                             'Callback', 'doc fixedpoint');
    h.actions.put('HELP_SLFXPT', action);
    
    action = am.createAction(h, ...
                             'Text', fxptui.message('actionHELPSLFXPTDEMOS'), ...
                             'Tag', 'FPT_help_slfxptdemos',...
                             'Callback', 'demo(''matlab'',''Fixed-Point Designer'')');
    h.actions.put('HELP_SLFXPTDEMOS', action);
    
    action = am.createAction(h, ...
                             'Text', fxptui.message('actionHELPABOUTSLFXPT'), ...
                             'Tag', 'FPT_help_aboutslfxpt',...
                             'Callback', 'fxptui.aboutslfixpoint');
    h.actions.put('HELP_ABOUTSLFXPT', action);
    
end

%Runs----------------------------------------------------------------------
action = am.createAction(h, ...
                         'Text', fxptui.message('actionRESULTSCLEARSELRUN'), ...
                         'Tag', 'FPT_results_clearselectedrun',...
                         'Callback', 'fxptui.cb_clearselectedrun;');
h.actions.put('RESULTS_CLEARSELRUN', action);

action = am.createAction(h, ...
                         'Text', fxptui.message('actionRESULTSCLEARALLRUN'), ...
                         'Tag', 'FPT_results_clearallruns',...
                         'Callback', 'fxptui.cb_clearallruns;');
h.actions.put('RESULTS_CLEARALLRUN', action);

%VIEW MANAGER--------------------------------------------------------------
action = am.createAction(h, ...
    'Text', fxptui.message('actionLockView'),...     %'Automatically switch column views', ...                         
    'Tag', 'FPT_viewmanager_lock',...
    'Callback', 'fxptui.cb_togglelockview;');
action.toggleAction = 'On';
action.on = 'Off';
h.actions.put('VIEWMANAGER_LOCK', action);

% MLFB Code View ----------------------------------------------------------
if fxptui.isMATLABFunctionBlockConversionEnabled()
	action = am.createAction(h, ...
		'icon', coder.internal.mlfb.gui.MlfbUtils.getCodeViewActionIcon(), ...
		'Text', coder.internal.mlfb.gui.message('actionOpenCodeView'), ...
		'Tag', 'FPT_code_view', ...
		'Callback', 'coder.internal.mlfb.gui.fxptToolOpenCodeView;');
	h.actions.put('OPEN_CODE_VIEW', action);
end

%--------------------------------------------------------------------------

% [EOF]

% LocalWords:  viewmanager togglelockview togglehighlightoption mlfb fxpt
