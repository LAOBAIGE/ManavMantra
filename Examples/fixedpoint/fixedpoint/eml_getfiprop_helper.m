function [propVal,pseudoData] = eml_getfiprop_helper(Ain,propName,aNotConst,aMaybeFloat)
% Helper function that returns the property value of the fi A
% for its property PROPNAME

% Copyright 2006-2013 The MathWorks, Inc.

    narginchk(3,4);
    if nargin==3
        aMaybeFloat = false;
    end

    % Properties supported in codegen
    supported_properties = {...
        'bias',...
        'castbeforesum',...
        'data',...
        'datatype',...
        'datatypemode',...
        'double',...
        'fimath',...
        'fixedexponent',...
        'fractionlength',...
        'maxproductwordlength',...
        'maxsumwordlength',...
        'numerictype',...
        'overflowaction',...
        'overflowmode',...
        'productbias',...
        'productfixedexponent',...
        'productfractionlength',...
        'productmode',...
        'productslope',...
        'productslopeadjustmentfactor',...
        'productwordlength',...
        'roundingmethod',...
        'roundmode',...
        'scaling',...
        'signed',...
        'signedness',...
        'signednessbool',...
        'slope',...
        'slopeadjustmentfactor',...
        'sumbias',...
        'sumfixedexponent',...
        'sumfractionlength',...
        'summode',...
        'sumslope',...
        'sumslopeadjustmentfactor',...
        'sumwordlength',...
        'wordlength'};
    if isempty(intersect(lower(propName),supported_properties))
        
        % No public get access in both MATLAB and codegen
        noPublicGetAccess = {'lastpropertyset','binarypoint','datatypeoverride'};
        if ~isempty(intersect(lower(propName),noPublicGetAccess))
            % Error if in the "no public get access" list
            error(message('MATLAB:class:GetProhibited', propName,'fi'));
        end

        % Not supported in codegen via get method
        unSupportedCodegenProp = {...
            'int', ...
            'bin',...
            'hex',...
            'oct',...
            'dec',...
            'intarray',...
            'simulinkarray'};
        if ~isempty(intersect(lower(propName),unSupportedCodegenProp))
            % Error if in the "not supported in codegen" list
            error(message('fixed:fi:unsupportedPropCodeGen', propName));
        end

        % Error if not in the supported properties list, and one of the other
        % special-properties errors was not thrown.
        error(message('fixed:coder:onlyDotForProperty',propName,'fi',propName,'fi','fi',propName));
    end

    if ~isfi(Ain)
        if ~aMaybeFloat
            error(message('fixed:fi:inputMustBeFi'));
        else
            A = fi(Ain, 'DataTypeMode', class(Ain));
        end
    else
        A = Ain;
    end

    propVal = get(A,propName);

    if (strcmpi(propName,'data')||strcmpi(propName,'double')) && aNotConst
        pseudoData = true;
    else
        pseudoData = false;
    end

end
